@page "/trainercompetitions"

@inject MVC.Repository.Interface.IBaseRepository<Competition> _competitionRepository
@inject NavigationManager _navManager

<h3>TrainerHomeComponent</h3>

<----> header: TWOJ KLUB: NAZWA,  OPIS </---->

@if (competitions != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Name</th>
                <th>Description</th>
                <th></th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var competition in competitions)
            {
            <tr>
                <td>@competition.Term</td>
                <td>@competition.Name</td>
                <td>@competition.Description</td>
                <td><button type="button" @onclick="@(() => Show(competition))" class="btn btn-link">Show</button></td>
                <td><button type="button" @onclick="@(() => Edit(competition))" class="btn btn-link">Edit</button></td>
                <td><button type="button" @onclick="@(() => Delete(competition))" class="btn btn-link">Delete</button></td>

            </tr>
            }
        </tbody>
    </table>
}
<br/>
<button type="button" @onclick="Add" class="btn btn-primary">Add New</button>

@code {
    private List<Competition> competitions;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        LoadData();
    }

    private void LoadData()
    {
        competitions = _competitionRepository.GetAll()?.ToList();
    }

    private void Add()
    {
        _navManager.NavigateTo($"/addcompetition");
    }

    private void Show(Competition competition)
    {
        _navManager.NavigateTo($"/competitionpage/{competition.Id}");
    }

    private void Edit(Competition competition)
        {
        _navManager.NavigateTo($"/editcompetition/{competition.Id}");
        }

    private void Delete(Competition competition)
    {
        _competitionRepository.Delete(competition.Id);
    }

}
